<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
       http://www.springframework.org/schema/mvc
	   http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
	   http://www.springframework.org/schema/util
	   http://www.springframework.org/schema/util/spring-util.xsd
       ">

    <!-- Hibernate configuration -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="dataAccess.entities"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
            </props>
        </property>
    </bean> 

    <bean id="dataSource" class="org.apache.tomcat.dbcp.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost/hardwareStore"/>
        <!--<property name="url" value="jdbc:mysql://192.168.0.50:3306/medicamentos" />-->
        <property name="username" value="root"/>
        <property name="password" value="javaArsenalData1"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" mode="proxy" proxy-target-class="true"/>
    
    <bean id="genericDao" class="dataAccess.dao.imp.GenericDAO" autowire="byName" scope="prototype">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <!-- DAO's beans-->
    <bean id="accountDAO" class="dataAccess.dao.imp.AccountDAO" autowire="byName" scope="prototype" parent="genericDao"/>
    <bean id="administratorDAO" class="dataAccess.dao.imp.AdministratorDAO" autowire="byName" scope="prototype" parent="genericDao"/>
    <bean id="customerDAO" class="dataAccess.dao.imp.CustomerDAO" autowire="byName" scope="prototype" parent="genericDao"/>
    <bean id="itemDAO" class="dataAccess.dao.imp.ItemDAO" autowire="byName" scope="prototype" parent="genericDao"/>
    <bean id="orderBillDAO" class="dataAccess.dao.imp.OrderBillDAO" autowire="byName" scope="prototype" parent="genericDao"/>
    <bean id="orderDAO" class="dataAccess.dao.imp.OrderDAO" autowire="byName" scope="prototype" parent="genericDao"/>

    <!-- Controllers -->
    <bean id="customerController" class="businessLogic.controllers.CustomerController" autowire="byName" scope="singleton"/>
    <bean id="loginController" class="businessLogic.controllers.LoginController" autowire="byName" scope="singleton"/>

    <!-- Services -->
    <bean id="customerService" class="businessLogic.services.CustomerService" autowire="byName" scope="singleton"/>
    <bean id="itemService" class="businessLogic.services.ItemService" autowire="byName" scope="singleton"/>
    <bean id="orderBillService" class="businessLogic.services.OrderBillService" autowire="byName" scope="singleton"/>
    <bean id="orderService" class="businessLogic.services.OrderService" autowire="byName" scope="singleton"/>

    <!-- Message JSON converters -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="defaultContentType" ref="jsonMediaType"/>
        <property name="mediaTypes" >
            <value>
                json=application/json
                xml=application/xml
            </value>
        </property>
    </bean>

    <bean id="jsonMediaType" class="org.springframework.http.MediaType">
        <constructor-arg value="application"/>
        <constructor-arg value="json"/>
    </bean>

    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

</beans>
